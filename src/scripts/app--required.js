// DANGER
// Do not edit this file
// See app--optional.js to see what can be safely commented out

import '@carbon/ibmdotcom-web-components/es/components/masthead/masthead-container.js';
import '@carbon/ibmdotcom-web-components/es/components/footer/footer-container.js';



import checkHash from "./principals/checkHash";
import addEventListenerCustom from "./useful/addEventListenerCustom";
import lazyloadImages from "./useful/lazyloadImages.js";
import initNextBtnTransition from "./animations/initNextBtnTransition";


import "./vendors/vendor.fittext";


const body = document.body;
const scrollUp = "scroll-up";
const scrollDown = "scroll-down";
let lastScroll = 0;

const lazyLoadInstance = lazyloadImages();

// social buttons
window.socialShare = function (url, title, w, h, e) {
  const cookies = JSON.parse(localStorage.getItem("truste.eu.cookie.notice_preferences"));
  if (cookies && cookies.value === "0:") {
    window.truste.eu.clickListener(truste.eu.noticeLP.pn)
    return;
  }
  let left = screen.width / 2 - w / 2;
  let top = screen.height / 2 - h / 2;
  return window.open(
    url,
    title,
    "toolbar=no, menubar=no, scrollbars=yes, resizable=yes, width=" +
      w +
      ", height=" +
      h +
      ", top=" +
      top +
      ", left=" +
      left
  );
};

// print
window.printShare = function () {
  lazyLoadInstance.loadAll();
  window.print();
};
const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
if (!isSafari) {
  window.onbeforeprint = function () {
    lazyLoadInstance.loadAll();
  };
} else {
  var mediaQueryList = window.matchMedia("print");
  mediaQueryList.addListener(function (mql) {
    if (mql.matches) {
      lazyLoadInstance.loadAll();
    }
  });    
}




window.addEventListener("scroll", () => {
  const currentScroll = window.pageYOffset;

  if (currentScroll == 0) {
    body.classList.remove(scrollUp);
    body.classList.remove(scrollDown);
    return;
  }

  if (currentScroll > lastScroll && !body.classList.contains(scrollDown)) {
    // down
    body.classList.remove(scrollUp);
    body.classList.add(scrollDown);
  } else if (currentScroll < lastScroll && body.classList.contains(scrollDown)) {
    // up
    body.classList.remove(scrollDown);
    body.classList.add(scrollUp);
  }
  lastScroll = currentScroll;
});



window.addEventListener("load", function (){
  document.getElementById("smartpaper--the-grid").classList.add("ready");
  
  checkHash();
  window.addEventListener("popstate", checkHash);

  window.fitText(
    document.querySelectorAll("h1"),
    {
      minFontSize: "32px",
      maxFontSize: "56px",
    },
    0.8
  );
  window.fitText(
    document.querySelectorAll(".block--toc-item h2"),
    {
      minFontSize: "18px",
      maxFontSize: "24px",
    },
    1.2
  );

  const openButtons = document.querySelectorAll(".js-toc-item")
  addEventListenerCustom(openButtons, "open")

  
  const closeButtons = document.querySelectorAll(".js-section-close")
  addEventListenerCustom(closeButtons, "close")

  
  const nextButtons = document.querySelectorAll(".js-section-next-trigger")
  addEventListenerCustom(nextButtons, "next")
  initNextBtnTransition();

  


}) 
  
